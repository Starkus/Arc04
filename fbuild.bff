// Project Config
.GameName = 'game'
.SourcePath = 'src'
.ToolsSourcePath = 'tools'
.OutputPath = 'build'
.BinPath = 'bin'
.SolutionPath = 'solution'

// Includes
#include "build/paths.bff"
#include "compiler.bff"

// Build targets

.AllTargets = {}

// Preprocessor
ObjectList('PreprocessorSource')
{
	Using(.DebugBuild)

	.CompilerOptions = '$ExeCompilerOptions$'
	.CompilerInputFiles = '$ToolsSourcePath$/Preprocessor.cpp'
	.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
}
Executable('Preprocessor')
{
	Using(.DebugBuild)

	.LinkerOptions = .ExeLinkerOptions + ' /SUBSYSTEM:CONSOLE'
	.LinkerOutput = '$BinPath$/Preprocessor.exe'
	.Libraries = {
		'PreprocessorSource',
	}
}

ForEach(.BuildType in .BuildTypes)
{
	Using(.BuildType)

	// ImGui
	ObjectList('ImGuiSource_$BuildTypeName$')
	{
		.CompilerOptions = '$ExeCompilerOptions$ -DIMGUI_IMPL_OPENGL_LOADER_CUSTOM'
		.CompilerInputFiles = {
			'external/include/imgui/imgui_impl.cpp',
		}
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
	}

	// Win32 Platform
	Exec('Win32PlatformCPreprocess_$BuildTypeName$')
	{
		.ExecExecutable = '$CompilerExe$'
		.ExecOutput = '$GeneratedIncludePath$/Win32Platform$BuildTypeSufix$.i'
		.ExecArguments = '$ExeCompilerOptions$ /DPREPROCESSING=1 src/Win32Platform.cpp /P /Fi$GeneratedIncludePath$/Win32Platform$BuildTypeSufix$.i'
		.ExecAlways = true
	}
	Exec('Win32PlatformPreprocess_$BuildTypeName$')
	{
		.ExecExecutable = 'Preprocessor'
		.ExecInput = '$GeneratedIncludePath$/Win32Platform$BuildTypeSufix$.i'
		.ExecOutput = '$GeneratedIncludePath$/Win32Platform$BuildTypeSufix$.cpp'
		.ExecArguments = '-platform $GeneratedIncludePath$/Win32Platform$BuildTypeSufix$.i'
		.ExecAlways = true
	}

	ObjectList('Win32PlatformSource_$BuildTypeName$')
	{
		.CompilerOptions = '$ExeCompilerOptions$'
		.CompilerInputFiles = {
			'$GeneratedIncludePath$/Win32Platform$BuildTypeSufix$.cpp',
		}
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
	}
	Executable('Win32Platform_$BuildTypeName$')
	{
		.LinkerOptions = '$ExeLinkerOptions$ /SUBSYSTEM:WINDOWS,5.02'
		.LinkerOutput = '$BinPath$/Win32Platform$BuildTypeSufix$.exe'
		.Libraries = {
			'Win32PlatformSource_$BuildTypeName$',
			'ImGuiSource_$BuildTypeName$',
		}
	}

	// Add to all targets
	^AllTargets + 'Win32Platform_$BuildTypeName$'

	// Game
	Exec('GameCPreprocess_$BuildTypeName$')
	{
		.ExecExecutable = '$CompilerExe$'
		.ExecOutput = '$GeneratedIncludePath$/Game$BuildTypeSufix$.i'
		.ExecArguments = '$DllCompilerOptions$ /DPREPROCESSING=1 src/Game.cpp /P /Fi$GeneratedIncludePath$/Game$BuildTypeSufix$.i'
		.ExecAlways = true
	}
	Exec('GamePreprocess_$BuildTypeName$')
	{
		.ExecExecutable = 'Preprocessor'
		.ExecInput = '$GeneratedIncludePath$/Game$BuildTypeSufix$.i'
		.ExecOutput = '$GeneratedIncludePath$/Game$BuildTypeSufix$.cpp'
		.ExecArguments = '-game $GeneratedIncludePath$/Game$BuildTypeSufix$.i'
		.ExecAlways = true
		.PreBuildDependencies = 'GameCPreprocess_$BuildTypeName$'
	}

	ObjectList('GameSource_$BuildTypeName$')
	{
		.CompilerOptions = '$DllCompilerOptions$'
		.CompilerInputFiles = {
			'$GeneratedIncludePath$/Game$BuildTypeSufix$.cpp',
		}
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
	}
	DLL('Game_$BuildTypeName$')
	{
		.LinkerOptions = '$DllLinkerOptions$ -EXPORT:StartGame -EXPORT:UpdateAndRenderGame'
		.LinkerOutput = '$BinPath$/$GameName$$BuildTypeSufix$.dll'
		.Libraries = {
			'GameSource_$BuildTypeName$',
			'ImGuiSource_$BuildTypeName$',
		}
	}

	// Add to all targets
	^AllTargets + 'Game_$BuildTypeName$'

	// Bakery
	ObjectList('BakerySource_$BuildTypeName$')
	{
		.CompilerOptions = '$ExeCompilerOptions$'
		.CompilerInputFiles = '$ToolsSourcePath$/Bakery.cpp'
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
	}
	Executable('Bakery_$BuildTypeName$')
	{
		.LinkerOptions = .ExeLinkerOptions + ' /SUBSYSTEM:CONSOLE'
		.LinkerOutput = '$BinPath$/Bakery$BuildTypeSufix$.exe'
		.Libraries = {
			'BakerySource_$BuildTypeName$',
		}
	}

	// Add to all targets
	^AllTargets + 'Bakery_$BuildTypeName$'
}

Alias('all') { .Targets = .AllTargets }

// VS Solution

VCXProject('Game_Project')
{
	.ProjectOutput = '$SolutionPath$/Game.vcxproj'

	.ProjectInputPaths = '$SourcePath$/'
	.ProjectBasePath = '$SourcePath$/'

	.ProjectConfigs = {}
	ForEach(.BuildType in .BuildTypes)
	{
		Using(.BuildType)
		.Config = [
			.Platform = 'X64'
			.Config = .BuildTypeName
			.Target = 'Game_$BuildTypeName$'
		]
		^ProjectConfigs + .Config
	}

	.ProjectBuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide Game_^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide -clean Game_^$(Configuration)'
}

VSSolution('Game_Solution')
{
	.SolutionOutput = '$SolutionPath$/Game.sln'
	.SolutionProjects = 'Game_Project'
	.SolutionConfigs = {}

	ForEach(.BuildType in .BuildTypes)
	{
		Using(.BuildType)
		.Config = [
			.Platform = 'X64'
			.Config = .BuildTypeName
		]
		^SolutionConfigs + .Config
	}

	.SolutionVisualStudioVersion = .VSVersion
	.SolutionBuildProject = 'Game_Project'
}
